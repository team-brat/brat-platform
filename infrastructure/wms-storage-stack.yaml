AWSTemplateFormatVersion: '2010-09-09'
Description: 'WMS Storage Infrastructure'

Parameters:
  EnvironmentType:
    Description: Environment type
    Type: String
    Default: dev
    AllowedValues:
      - dev
      - test
      - prod

Resources:
  # 문서 저장을 위한 S3 버킷
  DocumentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "wms-documents-${EnvironmentType}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true
      LifecycleConfiguration:
        Rules:
          - Id: ArchiveRule
            Status: Enabled
            Transitions:
              - TransitionInDays: 90
                StorageClass: GLACIER
  
  # 문서 메타데이터 DynamoDB 테이블
  DocumentMetadataTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-document-metadata-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: document_id
          AttributeType: S
        - AttributeName: order_id
          AttributeType: S
        - AttributeName: document_type
          AttributeType: S
        - AttributeName: upload_date
          AttributeType: N
      KeySchema:
        - AttributeName: document_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: order_id-index
          KeySchema:
            - AttributeName: order_id
              KeyType: HASH
            - AttributeName: document_type
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: type-date-index
          KeySchema:
            - AttributeName: document_type
              KeyType: HASH
            - AttributeName: upload_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
  
  # 재고 정보 DynamoDB 테이블
  InventoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-inventory-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: product_id
          AttributeType: S
        - AttributeName: warehouse_id
          AttributeType: S
        - AttributeName: bin_location
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: product_id
          KeyType: HASH
        - AttributeName: warehouse_id
          KeyType: RANGE
      GlobalSecondaryIndexes:
        - IndexName: location-index
          KeySchema:
            - AttributeName: bin_location
              KeyType: HASH
            - AttributeName: product_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: status-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: warehouse_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
            
  # 빈 위치 관리 DynamoDB 테이블
  BinLocationTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-bin-locations-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: bin_id
          AttributeType: S
        - AttributeName: zone
          AttributeType: S
        - AttributeName: status
          AttributeType: S
      KeySchema:
        - AttributeName: bin_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: zone-index
          KeySchema:
            - AttributeName: zone
              KeyType: HASH
            - AttributeName: bin_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: status-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: bin_id
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # 입고 주문 관리 DynamoDB 테이블
  ReceivingOrderTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-receiving-orders-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: order_id
          AttributeType: S
        - AttributeName: supplier_id
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: scheduled_date
          AttributeType: N
        - AttributeName: created_at
          AttributeType: N
        - AttributeName: verification_status
          AttributeType: S
      KeySchema:
        - AttributeName: order_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: supplier-index
          KeySchema:
            - AttributeName: supplier_id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: status-date-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: scheduled_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: date-status-index
          KeySchema:
            - AttributeName: scheduled_date
              KeyType: HASH
            - AttributeName: status
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: verification-status-index
          KeySchema:
            - AttributeName: verification_status
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
  
  # 입고 품목 테이블 (추가)
  ReceivingItemTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-receiving-items-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: item_id
          AttributeType: S
        - AttributeName: order_id
          AttributeType: S
        - AttributeName: sku_number
          AttributeType: S
        - AttributeName: created_at
          AttributeType: N
      KeySchema:
        - AttributeName: item_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: order_id-index
          KeySchema:
            - AttributeName: order_id
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: sku-index
          KeySchema:
            - AttributeName: sku_number
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # 입고 이력 관리 DynamoDB 테이블
  ReceivingHistoryTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-receiving-history-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: history_id
          AttributeType: S
        - AttributeName: order_id
          AttributeType: S
        - AttributeName: timestamp
          AttributeType: N
      KeySchema:
        - AttributeName: history_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: order-time-index
          KeySchema:
            - AttributeName: order_id
              KeyType: HASH
            - AttributeName: timestamp
              KeyType: RANGE
          Projection:
            ProjectionType: ALL


  # 공급업체 테이블 (추가)
  SupplierTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-suppliers-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: supplier_id
          AttributeType: S
        - AttributeName: supplier_name
          AttributeType: S
        - AttributeName: status
          AttributeType: S
        - AttributeName: created_at
          AttributeType: N
      KeySchema:
        - AttributeName: supplier_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: name-index
          KeySchema:
            - AttributeName: supplier_name
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: status-index
          KeySchema:
            - AttributeName: status
              KeyType: HASH
            - AttributeName: created_at
              KeyType: RANGE
          Projection:
            ProjectionType: ALL

  # 검증 결과 테이블 (추가)
  VerificationResultTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub "wms-verification-results-${EnvironmentType}"
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions:
        - AttributeName: verification_id
          AttributeType: S
        - AttributeName: order_id
          AttributeType: S
        - AttributeName: document_id
          AttributeType: S
        - AttributeName: verification_date
          AttributeType: N
        - AttributeName: result
          AttributeType: S
      KeySchema:
        - AttributeName: verification_id
          KeyType: HASH
      GlobalSecondaryIndexes:
        - IndexName: order_id-index
          KeySchema:
            - AttributeName: order_id
              KeyType: HASH
            - AttributeName: verification_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: document-index
          KeySchema:
            - AttributeName: document_id
              KeyType: HASH
            - AttributeName: verification_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
        - IndexName: result-date-index
          KeySchema:
            - AttributeName: result
              KeyType: HASH
            - AttributeName: verification_date
              KeyType: RANGE
          Projection:
            ProjectionType: ALL
  
  # 배포 패키지 저장을 위한 S3 버킷
  DeploymentBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "wms-deployment-${EnvironmentType}-${AWS::AccountId}"
      VersioningConfiguration:
        Status: Enabled
      PublicAccessBlockConfiguration:
        BlockPublicAcls: true
        BlockPublicPolicy: true
        IgnorePublicAcls: true
        RestrictPublicBuckets: true

  # 웹 프론트엔드 호스팅을 위한 S3 버킷
  WebsiteBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: !Sub "wms-website-${EnvironmentType}-${AWS::AccountId}"
      WebsiteConfiguration:
        IndexDocument: index.html
        ErrorDocument: error.html
      PublicAccessBlockConfiguration:
        BlockPublicAcls: false
        BlockPublicPolicy: false
        IgnorePublicAcls: false
        RestrictPublicBuckets: false

  # 웹 버킷에 대한 공개 액세스 정책
  WebsiteBucketPolicy:
    Type: AWS::S3::BucketPolicy
    Properties:
      Bucket: !Ref WebsiteBucket
      PolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal: '*'
            Action: 's3:GetObject'
            Resource: !Sub "arn:aws:s3:::${WebsiteBucket}/*"

Outputs:
  DocumentBucketName:
    Description: Name of the document S3 bucket
    Value: !Ref DocumentBucket
    Export:
      Name: !Sub "${AWS::StackName}-DocumentBucketName"
  
  DocumentMetadataTableName:
    Description: Name of the document metadata DynamoDB table
    Value: !Ref DocumentMetadataTable
    Export:
      Name: !Sub "${AWS::StackName}-DocumentMetadataTableName"
  
  InventoryTableName:
    Description: Name of the inventory DynamoDB table
    Value: !Ref InventoryTable
    Export:
      Name: !Sub "${AWS::StackName}-InventoryTableName"
      
  BinLocationTableName:
    Description: Name of the bin locations DynamoDB table
    Value: !Ref BinLocationTable
    Export:
      Name: !Sub "${AWS::StackName}-BinLocationTableName"
  
  ReceivingOrderTableName:
    Description: Name of the receiving orders DynamoDB table
    Value: !Ref ReceivingOrderTable
    Export:
      Name: !Sub "${AWS::StackName}-ReceivingOrderTableName"
  
  ReceivingItemTableName:
    Description: Name of the receiving items DynamoDB table
    Value: !Ref ReceivingItemTable
    Export:
      Name: !Sub "${AWS::StackName}-ReceivingItemTableName"
  
  ReceivingHistoryTableName:
    Description: Name of the receiving history DynamoDB table
    Value: !Ref ReceivingHistoryTable
    Export:
      Name: !Sub "${AWS::StackName}-ReceivingHistoryTableName"
  
  SupplierTableName:
    Description: Name of the suppliers DynamoDB table
    Value: !Ref SupplierTable
    Export:
      Name: !Sub "${AWS::StackName}-SupplierTableName"
  
  VerificationResultTableName:
    Description: Name of the verification results DynamoDB table
    Value: !Ref VerificationResultTable
    Export:
      Name: !Sub "${AWS::StackName}-VerificationResultTableName"
  
  DeploymentBucketName:
    Description: Name of the deployment S3 bucket
    Value: !Ref DeploymentBucket
    Export:
      Name: !Sub "${AWS::StackName}-DeploymentBucketName"
  
  WebsiteBucketName:
    Description: Name of the website S3 bucket
    Value: !Ref WebsiteBucket
    Export:
      Name: !Sub "${AWS::StackName}-WebsiteBucketName"
  
  WebsiteURL:
    Description: URL of the S3 website
    Value: !GetAtt WebsiteBucket.WebsiteURL
    Export:
      Name: !Sub "${AWS::StackName}-WebsiteURL"