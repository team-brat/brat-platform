version: 0.2

phases:
  install:
    runtime-versions:
      python: 3.9
    commands:
      - echo Installing dependencies...
      - mkdir -p document-package bin-package receiving-order-package receiving-item-package supplier-package verification-package eventbridge-package
      - pip install -r src/functions/document-service/requirements.txt -t ./document-package || echo "No requirements.txt found"
      - pip install -r src/functions/bin-service/requirements.txt -t ./bin-package || echo "No requirements.txt found"
      - pip install -r src/functions/receiving-order-service/requirements.txt -t ./receiving-order-package || echo "No requirements.txt found"
      - pip install -r src/functions/receiving-item-service/requirements.txt -t ./receiving-item-package || echo "No requirements.txt found"
      - pip install -r src/functions/supplier-service/requirements.txt -t ./supplier-package || echo "No requirements.txt found"
      - pip install -r src/functions/verification-service/requirements.txt -t ./verification-package || echo "No requirements.txt found"
      - pip install -r src/functions/eventbridge-integration/requirements.txt -t ./eventbridge-package || echo "No requirements.txt found"

  build:
    commands:
      - echo Packaging Lambda functions...
      - mkdir -p deployment
      
      # Document Service
      - cp src/functions/document-service/DocumentService.py ./document-package/
      - cd document-package
      - zip -r ../deployment/document-service-deployment-package.zip .
      - cd ..

      # Bin Service
      - cp src/functions/bin-service/handler.py ./bin-package/
      - cd bin-package
      - zip -r ../deployment/bin-service-deployment-package.zip .
      - cd ..
      
      # Receiving Order Service
      - cp src/functions/receiving-order-service/ReceivingOrderService.py ./receiving-order-package/
      - cd receiving-order-package
      - zip -r ../deployment/receiving-order-service-deployment-package.zip .
      - cd ..
      
      # Receiving Item Service
      - cp src/functions/receiving-item-service/ReceivingItemService.py ./receiving-item-package/
      - cd receiving-item-package
      - zip -r ../deployment/receiving-item-service-deployment-package.zip .
      - cd ..
      
      # Supplier Service
      - cp src/functions/supplier-service/SupplierService.py ./supplier-package/
      - cd supplier-package
      - zip -r ../deployment/supplier-service-deployment-package.zip .
      - cd ..
      
      # Verification Service
      - cp src/functions/verification-service/VerificationService.py ./verification-package/
      - cd verification-package
      - zip -r ../deployment/verification-service-deployment-package.zip .
      - cd ..
      
      # EventBridge Integration Service
      - cp src/functions/eventbridge-integration/EventBridgeIntegrationService.py ./eventbridge-package/
      - cd eventbridge-package
      - zip -r ../deployment/eventbridge-integration-service-deployment-package.zip .
      - cd ..

  post_build:
    commands:
      - ls -la deployment/
      - aws s3 cp deployment/document-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/document-service/deployment-package.zip --acl private || echo "Document service upload failed"
      - aws s3 cp deployment/bin-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/bin-service/deployment-package.zip --acl private || echo "Bin service upload failed"
      - aws s3 cp deployment/receiving-order-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/receiving-order-service/deployment-package.zip --acl private || echo "Receiving order service upload failed"
      - aws s3 cp deployment/receiving-item-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/receiving-item-service/deployment-package.zip --acl private || echo "Receiving item service upload failed"
      - aws s3 cp deployment/supplier-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/supplier-service/deployment-package.zip --acl private || echo "Supplier service upload failed"
      - aws s3 cp deployment/verification-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/verification-service/deployment-package.zip --acl private || echo "Verification service upload failed"
      - aws s3 cp deployment/eventbridge-integration-service-deployment-package.zip s3://${DEPLOYMENT_BUCKET}/${ENVIRONMENT_TYPE}/eventbridge-integration/deployment-package.zip --acl private || echo "EventBridge integration service upload failed"
      - echo "Files uploaded to S3"
      
      # Lambda 함수 업데이트
      - aws lambda update-function-code --function-name wms-document-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/document-service/deployment-package.zip || echo "Document service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-bin-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/bin-service/deployment-package.zip || echo "Bin service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-receiving-order-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/receiving-order-service/deployment-package.zip || echo "Receiving order service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-receiving-item-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/receiving-item-service/deployment-package.zip || echo "Receiving item service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-supplier-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/supplier-service/deployment-package.zip || echo "Supplier service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-verification-service-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/verification-service/deployment-package.zip || echo "Verification service update failed - function may not exist yet"
      - aws lambda update-function-code --function-name wms-eventbridge-integration-${ENVIRONMENT_TYPE} --s3-bucket ${DEPLOYMENT_BUCKET} --s3-key ${ENVIRONMENT_TYPE}/eventbridge-integration/deployment-package.zip || echo "EventBridge integration service update failed - function may not exist yet"
      - echo "Lambda functions updated if they exist"

artifacts:
  files:
    - infrastructure/wms-base-infrastructure.yaml
    - infrastructure/wms-storage-stack.yaml
    - infrastructure/wms-service-stack.yaml
    - appspec.yml